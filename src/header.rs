// TODO: add from + into &str

pub struct Header<'h> {
    name: HeaderName<'h>,
    value: &'h [u8]
}

impl<'h> Header<'h> {
    pub fn new(name: HeaderName<'h>, value: impl Into<&'h [u8]>) -> Self {
        Self { name, value: value.into() }
    }
}

pub enum HeaderName<'h> {
    Standard(StandardHeaderName),
    Custom(&'h str)
}

#[derive(PartialEq, Eq, Hash)]
pub enum StandardHeaderName {
    Accept,
    AcceptCharset,
    AcceptEncoding,
    AcceptLanguage,
    AcceptPatch,
    AcceptPost,
    AcceptRanges,
    AccessControlAllowCredentials,
    AccessControlAllowHeaders,
    AccessControlAllowMethods,
    AccessControlAllowOrigin,
    AccessControlExposeHeaders,
    AccessControlMaxAge,
    AccessControlRequestHeaders,
    AccessControlRequestMethod,
    Age,
    Allow,
    AltSvc,
    AltUsed,
    Authoritzation,
    CacheControl,
    ClearSiteData,
    Connection,
    ContentDisposition,
    ContentEncoding,
    ContentLanguage,
    ContentLength,
    ContentLocation,
    ContentRange,
    ContentSecurityPolicy,
    ContentSecurityPolicyReportOnly,
    ContentType,
    Cookie,
    CrossOriginEmbedderPolicy,
    CrossOriginOpenerPolicy,
    CrossOriginResourcePolicy,
    Date,
    DeviceMemory,
    Etag,
    Expect,
    Expires,
    Forwarded,
    From,
    Host,
    IfMatch,
    IfModifiedSince,
    IfNoneMatch,
    IfRange,
    IfUnmodifiedSince,
    KeepAlive,
    LastModified,
    Link,
    Location,
    MaxForwards,
    Origin,
    PermissionsPolicy,
    ProxyAuthenticate,
    ProxyAuthorization,
    Range,
    Referer,
    RefererPollicy,
    ReportingEndpoints,
    RetryAfter,
    SecFetchDest,
    SecFetchMode,
    SecFetchSite,
    SecFetchuser,
    SecPurpose,
    SecWebsocketAccept,
    Server,
    ServerTiming,
    ServiceWorkerNavigationPreload,
    SetCookie,
    SourceMap,
    StrictTransportSecurity,
    TE,
    TimingAllowOrigin,
    Trailer,
    TransferEncoding,
    Upgrade,
    UpgradeInsecureRequests,
    UserAgent,
    Vary,
    Via,
    WWWAuthenticate,
    XContentTypeOptions,
    XFrameOptions
}
